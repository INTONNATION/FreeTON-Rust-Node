- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This role only works with systemd"

- name: Get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version
  tags:
    - skip_ansible_lint

- name: Set systemd version fact
  set_fact:
    node_exporter_systemd_version: "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"

- name: Naive assertion of proper listen address
  assert:
    that:
      - "':' in node_exporter_web_listen_address"

- name: Assert collectors are not both disabled and enabled at the same time
  assert:
    that:
      - "item not in node_exporter_enabled_collectors"
  with_items: "{{ node_exporter_disabled_collectors }}"
- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/prometheus/node_exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5

    - name: "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        node_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - node_exporter_version == "latest"
    - node_exporter_binary_local_dir | length == 0
  delegate_to: localhost
  run_once: true

- block:
    - name: Get checksum list from github
      set_fact:
        _checksums: "{{ lookup('url', 'https://github.com/prometheus/node_exporter/releases/download/v' + node_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
      run_once: true

    - name: "Get checksum for {{ go_arch }} architecture"
      set_fact:
        node_exporter_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ _checksums }}"
      when:
        - "('linux-' + go_arch + '.tar.gz') in item"
  delegate_to: localhost
  when: node_exporter_binary_local_dir | length == 0

- name: create node_exporter binary install directory
  file:
    path: "{{ node_exporter_binary_install_dir }}"
    state: directory
    owner: root
    group: root

- name: Create the node_exporter group
  group:
    name: "{{ node_exporter_system_group }}"
    state: present
    system: true
  when: node_exporter_system_group != "root"

- name: Create the node_exporter user
  user:
    name: "{{ node_exporter_system_user }}"
    groups: "{{ node_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false
    home: /
  when: node_exporter_system_user != "root"

- block:
    - name: Download node_exporter binary to local folder
      become: false
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
        dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
        checksum: "sha256:{{ node_exporter_checksum }}"
        mode: '0644'
      register: _download_binary
      until: _download_binary is succeeded
      retries: 5
      delay: 2
      delegate_to: localhost
      check_mode: false

    - name: Unpack node_exporter binary
      become: false
      unarchive:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
        dest: "/tmp"
        creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"
      delegate_to: localhost
      check_mode: false

    - name: Propagate node_exporter binaries
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"
        dest: "{{ node_exporter_binary_install_dir }}/node_exporter"
        mode: 0755
        owner: root
        group: root
      notify: restart node_exporter
      when: not ansible_check_mode
  when: node_exporter_binary_local_dir | length == 0

- name: propagate locally distributed node_exporter binary
  copy:
    src: "{{ node_exporter_binary_local_dir }}/node_exporter"
    dest: "{{ node_exporter_binary_install_dir }}/node_exporter"
    mode: 0755
    owner: root
    group: root
  when: node_exporter_binary_local_dir | length > 0
  notify: restart node_exporter

- name: Copy the Node Exporter systemd service file
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart node_exporter

- name: Create textfile collector dir
  file:
    path: "{{ node_exporter_textfile_dir }}"
    state: directory
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
    recurse: true
    mode: 0775
  when: node_exporter_textfile_dir | length > 0

- name: Ensure Node Exporter is enabled on boot
  become: true
  systemd:
    daemon_reload: true
    name: node_exporter
    enabled: true
    state: started
  tags:
    - node_exporter_run
