---
- name: Scripts remote checkout
  git:
    repo: '{{ git_repo_url }}'
    dest: /opt/FreeTON-Rust-Node

- name: Install dependencies
  command: "/opt/FreeTON-Rust-Node/scripts/install_deps.sh"

- name: Start remote build
  shell: "/opt/FreeTON-Rust-Node/scripts/build.sh"
  when: build == "remote"

- name: Scripts local checkout
  git:
    repo: '{{ git_repo_url }}'
    dest: "{{ playbook_dir }}/FreeTON-Rust-Node"
  delegate_to: localhost
  when: build == "local"

- name: Start local build
  shell: "{{ playbook_dir }}/FreeTON-Rust-Node/scripts/install_deps.sh && {{ playbook_dir }}/FreeTON-Rust-Node/scripts/build.sh"
  when: build == "local"

- name: Get assets
  get_url:
    url: "https://api.github.com/repos/azavodovsky/FreeTON-Rust-Node/releases/latest?access_token={{ github_token }}"
    force: yes
    headers:
      Accept: "application/vnd.github.v3+json"
    dest: "/tmp/assets_response"
  when: build != "local" and build != "remote"

- name: Get download url
  shell: |
    cat "/tmp/assets_response" | jq '.assets | .[] | select(.browser_download_url | contains("tar.gz")) | .url' | sed -e 's/^"//' -e 's/"$//'
  register: "download_url"
  when: build != "local" and build != "remote"

- debug:
    msg: "{{ download_url.stdout }}"
  when: build != "local" and build != "remote"

- name: Download latest release
  get_url:
    url: "{{ download_url.stdout }}?access_token={{ github_token }}"
    dest: /tmp/rusnode.tar.gz
    tmp_dest: /tmp/
    force: yes
    headers:
      Accept: "application/octet-stream"
  when: version == "latest" and (build != "local" and build != "remote")

- name: Unachive release 
  unarchive:
    src: /tmp/rusnode.tar.gz
    dest: /usr/local/bin
    remote_src: yes
  when: version == "latest" and (build != "local" and build != "remote")
